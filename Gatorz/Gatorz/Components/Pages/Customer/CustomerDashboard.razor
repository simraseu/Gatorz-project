@page "/customer/dashboard"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Gatorz.Data
@using Gatorz.Models
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize(Roles = "Customer")]
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>My Account - Gatorz</PageTitle>

<div class="container py-4">
    <h1>Welcome, @firstName!</h1>
    <p class="lead">Manage your bookings and account from your personal dashboard.</p>

    <div class="row mb-4">
        <!-- Stats Cards -->
        <div class="col-md-4 mb-4">
            <div class="card bg-primary text-white h-100">
                <div class="card-body">
                    <h5 class="card-title">Total Bookings</h5>
                    <h2 class="mt-3 mb-0">@totalBookings</h2>
                    <p class="card-text mt-3">Trips you've booked with us</p>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card bg-success text-white h-100">
                <div class="card-body">
                    <h5 class="card-title">Upcoming Trips</h5>
                    <h2 class="mt-3 mb-0">@upcomingTrips</h2>
                    <p class="card-text mt-3">Experiences waiting for you</p>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card bg-info text-white h-100">
                <div class="card-body">
                    <h5 class="card-title">Member Since</h5>
                    <h2 class="mt-3 mb-0">@memberSince</h2>
                    <p class="card-text mt-3">Days as a valued customer</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Bookings -->
        <div class="col-md-6 mb-4">
            <div class="card h-100">
                <div class="card-header bg-light">
                    <h5 class="mb-0">My Bookings</h5>
                </div>
                <div class="card-body d-flex flex-column">
                    <p>View and manage your travel bookings.</p>
                    
                    @if (recentBookings.Any())
                    {
                        <div class="list-group mb-3">
                            @foreach (var booking in recentBookings)
                            {
                                <a href="/customer/booking/@booking.Id" class="list-group-item list-group-item-action">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">
                                            @(GetDestinationName(booking))
                                        </h6>
                                        <small class="text-muted">@booking.BookingDate.ToString("MMM d")</small>
                                    </div>
                                    <p class="mb-1">@booking.Status</p>
                                    <small class="text-muted">$@booking.TotalPrice.ToString("N2")</small>
                                </a>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <p class="mb-0">You don't have any bookings yet.</p>
                        </div>
                    }
                    
                    <div class="mt-auto">
                        <a href="/customer/bookings" class="btn btn-primary me-2">View All Bookings</a>
                        <a href="/search" class="btn btn-outline-primary">Find a Trip</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Account Settings -->
        <div class="col-md-6 mb-4">
            <div class="card h-100">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Account Settings</h5>
                </div>
                <div class="card-body d-flex flex-column">
                    <p>Update your personal information and preferences.</p>
                    
                    <ul class="list-group mb-3">
                        <li class="list-group-item">
                            <strong>Email:</strong> @email
                        </li>
                        <li class="list-group-item">
                            <strong>Name:</strong> @firstName @lastName
                        </li>
                        <li class="list-group-item">
                            <strong>Member Status:</strong> 
                            <span class="badge bg-primary">@GetMemberStatus()</span>
                        </li>
                    </ul>
                    
                    <div class="mt-auto">
                        <a href="/Account/Manage" class="btn btn-primary">Update Profile</a>
                        <a href="/Account/Manage/ChangePassword" class="btn btn-outline-secondary ms-2">Change Password</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <!-- Special Offers -->
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Special Offers For You</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <div class="card special-offer h-100">
                                <div class="special-offer-img" style="background-image: url('/images/barcelona.jpg')"></div>
                                <div class="card-body">
                                    <h5 class="card-title">Barcelona Weekend</h5>
                                    <p class="card-text">3 nights in Barcelona with flights from $599</p>
                                    <a href="/search?destination=Barcelona" class="btn btn-sm btn-primary">See Details</a>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <div class="card special-offer h-100">
                                <div class="special-offer-img" style="background-image: url('/images/rome.jpg')"></div>
                                <div class="card-body">
                                    <h5 class="card-title">Roman Holiday</h5>
                                    <p class="card-text">5 nights in Rome with flights from $899</p>
                                    <a href="/search?destination=Rome" class="btn btn-sm btn-primary">See Details</a>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <div class="card special-offer h-100">
                                <div class="special-offer-img" style="background-image: url('/images/dubai.jpg')"></div>
                                <div class="card-body">
                                    <h5 class="card-title">Luxury Dubai</h5>
                                    <p class="card-text">7 nights in Dubai with flights from $1,299</p>
                                    <a href="/search?destination=Dubai" class="btn btn-sm btn-primary">See Details</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }
    
    private string firstName = "Guest";
    private string lastName = "";
    private string email = "";
    private int totalBookings = 0;
    private int upcomingTrips = 0;
    private int memberSince = 0;
    private List<Booking> recentBookings = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var currentUser = await UserManager.GetUserAsync(authState.User);
            if (currentUser != null)
            {
                firstName = currentUser.FirstName;
                lastName = currentUser.LastName;
                email = currentUser.Email;
                
                // Calculate days since registration
                memberSince = (int)(DateTime.Now - currentUser.ProfileCreated).TotalDays;
                
                // In a real application, you'd load the actual bookings for this user
                // This is simplified for demo purposes
                recentBookings = await DbContext.Bookings
                    .Include(b => b.TravelPackages)
                    .Where(b => b.UserId == 1) // Simplified - using a dummy user ID
                    .OrderByDescending(b => b.BookingDate)
                    .Take(3)
                    .ToListAsync();
                    
                totalBookings = recentBookings.Count;
                
                // Count upcoming trips
                upcomingTrips = recentBookings
                    .Count(b => b.TravelPackages.Any(tp => tp.StartDate >= DateTime.Now));
            }
        }
        catch (Exception ex)
        {
            // Handle error (in a real app, you'd log this)
            Console.WriteLine($"Error loading dashboard: {ex.Message}");
        }
    }

    private string GetDestinationName(Booking booking)
    {
        if (booking?.TravelPackages == null || !booking.TravelPackages.Any())
            return "Unknown Destination";
            
        // If there are multiple destinations, list them
        if (booking.TravelPackages.Count > 1)
        {
            return $"{booking.TravelPackages.First().Destination} + {booking.TravelPackages.Count - 1} more";
        }
        
        return booking.TravelPackages.First().Destination;
    }
    
    private string GetMemberStatus()
    {
        // Simple logic based on time as a member
        if (memberSince > 365)
            return "Gold";
        else if (memberSince > 180)
            return "Silver";
        else
            return "Bronze";
    }
}
