@page "/search"
@using Gotorz.Models
@using Gotorz.Services
@inject ITravelPackageService TravelPackageService
@inject NavigationManager NavigationManager

<PageTitle>Search for Travel - Gotorz</PageTitle>

<div class="search-container">
    <h2>Find your perfect trip</h2>
    <p class="lead mb-4">Search among our many travel package offers with flight and hotel</p>

    <div class="search-form p-4 bg-white rounded shadow-sm">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="origin" class="form-label">From:</label>
                    <input id="origin" class="form-control" @bind="Origin" placeholder="Departure from..." />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="destination" class="form-label">To:</label>
                    <input id="destination" class="form-control" @bind="Destination" placeholder="Destination..." />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="departureDate" class="form-label">Departure date:</label>
                    <input id="departureDate" type="date" class="form-control" @bind="DepartureDate" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="returnDate" class="form-label">Return date:</label>
                    <input id="returnDate" type="date" class="form-control" @bind="ReturnDate" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <button class="btn btn-primary w-100" @onclick="SearchTravelPackages">
                    <i class="bi bi-search"></i> Search
                </button>
            </div>
        </div>
    </div>
</div>

@if (IsLoading)
{
    <div class="d-flex justify-content-center mt-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Searching for travel options...</span>
        </div>
    </div>
}

@if (!IsLoading && hasSearched && !TravelPackages.Any())
{
    <div class="alert alert-info mt-4">
        <h4>No travel packages found</h4>
        <p>We couldn't find any travel packages matching your criteria. Please try changing your search parameters.</p>
    </div>
}

@if (TravelPackages.Any())
{
    <h3 class="mt-5 mb-4">Available travel packages</h3>
    <div class="row">
        @foreach (var package in TravelPackages)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100 package-card">
                    <div class="package-img" style="background-image: url('@package.ImageUrl')">
                        <div class="package-overlay">
                            <span class="package-price">From $@package.GetFormattedPrice()</span>
                        </div>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@package.OriginCity to @package.Destination</h5>
                        <div class="mb-2">
                            <span class="text-muted">@package.StartDate.ToString("MMM d") - @package.EndDate.ToString("MMM d")</span>
                            <span class="ms-2 badge bg-info">@package.GetDuration()</span>
                        </div>
                        <p class="card-text mb-1">
                            <i class="bi bi-airplane"></i> @package.Airline
                        </p>
                        <p class="card-text mb-1">
                            <i class="bi bi-building"></i> @package.HotelName
                            <span class="hotel-stars">@package.GetStars()</span>
                        </p>
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <div class="package-price-display">
                                <span class="price-label">Total price</span>
                                <span class="price-value">$@package.GetFormattedPrice()</span>
                            </div>
                            <a href="/package/@package.Id" class="btn btn-primary">View details</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private string Origin { get; set; } = string.Empty;
    private string Destination { get; set; } = string.Empty;
    private DateTime DepartureDate { get; set; } = DateTime.Now.AddDays(7);
    private DateTime ReturnDate { get; set; } = DateTime.Now.AddDays(14);
    private bool IsLoading { get; set; } = false;
    private bool hasSearched { get; set; } = false;
    private List<TravelPackageViewModel> TravelPackages { get; set; } = new();

    protected override void OnInitialized()
    {
        // Pre-fill with popular destinations from URL parameters, if available
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("destination", out var destinationValue))
        {
            Destination = destinationValue.ToString();
        }
    }

    private async Task SearchTravelPackages()
    {
        if (string.IsNullOrWhiteSpace(Origin) || string.IsNullOrWhiteSpace(Destination))
        {
            return;
        }

        IsLoading = true;
        TravelPackages = await TravelPackageService.SearchPackagesAsync(Origin, Destination, DepartureDate, ReturnDate);
        IsLoading = false;
        hasSearched = true;
    }
}